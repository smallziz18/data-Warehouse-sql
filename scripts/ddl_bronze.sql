-- =========================================================
--          SCRIPT DE CR√âATION DES TABLES BRONZE
-- =========================================================
-- üìå Objectif :
-- Ce script permet de cr√©er les tables de la couche Bronze du Data Warehouse.
-- La couche Bronze est destin√©e au stockage brut des donn√©es, telles qu'elles 
-- proviennent des syst√®mes sources (CRM, ERP, etc.), sans transformation ni nettoyage.
-- 
-- üìå Pourquoi une couche Bronze ?
-- - Permet d'assurer la tra√ßabilit√© et la conservation des donn√©es d'origine.
-- - Facilite les op√©rations d‚Äôingestion de donn√©es.
-- - Sert de point de d√©part pour l‚Äôenrichissement et la transformation en Silver/Gold.
-- 
-- üìå Am√©liorations et robustesse du script :
-- - V√©rification pr√©alable de l'existence de la base de donn√©es et du sch√©ma.
-- - V√©rification de l'existence des tables avant leur cr√©ation pour √©viter les erreurs.
-- - Ajout de messages informatifs (`PRINT`) pour le suivi de l‚Äôex√©cution.
-- - S√©paration claire des structures CRM et ERP pour faciliter la maintenance.
-- 
-- =========================================================

-- üîπ 1Ô∏è‚É£ S√©lection de la base de donn√©es et cr√©ation si n√©cessaire
USE DataWarehouse;
GO





-- üîπ 3Ô∏è‚É£ Cr√©ation des tables de la source CRM (Customer Relationship Management)
-- ------------------------------------------------------------

-- üìå Table : crm_customer_info 
-- ‚û°Ô∏è Contient les informations clients extraites du CRM.
IF NOT EXISTS (SELECT * FROM information_schema.tables WHERE table_schema = 'bronze' AND table_name = 'crm_customer_info')
BEGIN
    CREATE TABLE bronze.crm_customer_info
    (
        customer_id INT,
        customer_key NVARCHAR(50),
        customer_first_name NVARCHAR(50),
        customer_last_name NVARCHAR(50),
        customer_material_status NVARCHAR(50),
        customer_gender NVARCHAR(50),
        customer_create_date NVARCHAR(50)
    );
    PRINT '‚úÖ Table bronze.crm_customer_info cr√©√©e avec succ√®s.';
END
ELSE
    PRINT '‚ÑπÔ∏è La table bronze.crm_customer_info existe d√©j√†.';
GO

-- üìå Table : crm_product_info 
-- ‚û°Ô∏è Contient les informations sur les produits provenant du CRM.
IF NOT EXISTS (SELECT * FROM information_schema.tables WHERE table_schema = 'bronze' AND table_name = 'crm_product_info')
BEGIN
    CREATE TABLE bronze.crm_product_info
    (
        product_id INT,
        product_key NVARCHAR(50),
        product_nm NVARCHAR(50),
        product_cost INT,
        product_line CHAR,
        product_start_date NVARCHAR(50),
        product_end_date NVARCHAR(50)
    );
    PRINT '‚úÖ Table bronze.crm_product_info cr√©√©e avec succ√®s.';
END
ELSE
    PRINT '‚ÑπÔ∏è La table bronze.crm_product_info existe d√©j√†.';
GO

-- üìå Table : crm_sales_details 
-- ‚û°Ô∏è Contient les d√©tails des ventes issues du CRM.
IF NOT EXISTS (SELECT * FROM information_schema.tables WHERE table_schema = 'bronze' AND table_name = 'crm_sales_details')
BEGIN
    CREATE TABLE bronze.crm_sales_details
    (
        sales_order_num NVARCHAR(50),
        sales_order_product_key NVARCHAR(50),
        sales_order_customer_id INT,
        sales_date INT,
        sales_shipping_date INT,
        sls_sales INT,
        sales_quatity INT,
        sales_price INT,
        sales_due_date INT
    );
    PRINT '‚úÖ Table bronze.crm_sales_details cr√©√©e avec succ√®s.';
END
ELSE
    PRINT '‚ÑπÔ∏è La table bronze.crm_sales_details existe d√©j√†.';
GO

-- üîπ 4Ô∏è‚É£ Cr√©ation des tables de la source ERP (Enterprise Resource Planning)
-- ------------------------------------------------------------

-- üìå Table : erp_customer_az12 
-- ‚û°Ô∏è Contient les informations clients issues de l‚ÄôERP.
IF NOT EXISTS (SELECT * FROM information_schema.tables WHERE table_schema = 'bronze' AND table_name = 'erp_customer_az12')
BEGIN
    CREATE TABLE bronze.erp_customer_az12
    (
        cid NVARCHAR(50),
        birthday NVARCHAR(50),
        gender NVARCHAR(50)
    );
    PRINT '‚úÖ Table bronze.erp_customer_az12 cr√©√©e avec succ√®s.';
END
ELSE
    PRINT '‚ÑπÔ∏è La table bronze.erp_customer_az12 existe d√©j√†.';
GO

-- üìå Table : erp_loc_A101 
-- ‚û°Ô∏è Contient les informations de localisation des clients de l‚ÄôERP.
IF NOT EXISTS (SELECT * FROM information_schema.tables WHERE table_schema = 'bronze' AND table_name = 'erp_loc_A101')
BEGIN
    CREATE TABLE bronze.erp_loc_A101
    (
        cid NVARCHAR(50),
        country NVARCHAR(50)
    );
    PRINT '‚úÖ Table bronze.erp_loc_A101 cr√©√©e avec succ√®s.';
END
ELSE
    PRINT '‚ÑπÔ∏è La table bronze.erp_loc_A101 existe d√©j√†.';
GO

-- üìå Table : erp_px_cat_g1v2 
-- ‚û°Ô∏è Contient les cat√©gories et sous-cat√©gories de produits de l‚ÄôERP.
IF NOT EXISTS (SELECT * FROM information_schema.tables WHERE table_schema = 'bronze' AND table_name = 'erp_px_cat_g1v2')
BEGIN
    CREATE TABLE bronze.erp_px_cat_g1v2
    (
        id NVARCHAR(50),
        category NVARCHAR(50),
        subcategory NVARCHAR(50),
        maintenance NVARCHAR(50)
    );
    PRINT '‚úÖ Table bronze.erp_px_cat_g1v2 cr√©√©e avec succ√®s.';
END
ELSE
    PRINT '‚ÑπÔ∏è La table bronze.erp_px_cat_g1v2 existe d√©j√†.';
GO

-- ‚úÖ Fin du script. Toutes les v√©rifications et cr√©ations de tables sont effectu√©es avec succ√®s.
